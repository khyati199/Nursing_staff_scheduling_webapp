@model NursingStaffPlanningandSchedulingExcellence.Models.UserWithScheduleVM

@{
    ViewBag.Title = "Staff Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var sno = 0;
    var dateCertificationExpiry = DateTime.Now.Date;
    var oneMonth = dateCertificationExpiry.AddMonths(1) - dateCertificationExpiry;
}

<div id="page-wrapper">
    <div class="container-fluid">
        <div class="row m-t-20">
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success" style="float: right;" role="alert">
                    <b>@TempData["Message"]</b>
                </div>
            }
            @if (TempData["DeleteMessage"] != null)
            {
                <div class="alert alert-danger" style="float: right;" role="alert">
                    <b>@TempData["DeleteMessage"]</b>
                </div>
            }
            <div class="row">
                <div class="col">
                    <div class="panel panel-info">
                        <div class="panel-heading "> @ViewBag.Title: @Model.User.FirstName @Model.User.LastName </div>
                        <div class="white-box">
                            <div class="table-responsive">
                                <table id="example" class="table  table-hover contact-list footable-loaded footable m-t-0" data-page-size="4">
                                    @if (Model != null)
                                    {
                                        <td>
                                            <dl class="dl-horizontal">
                                                <dt>
                                                    Name
                                                </dt>

                                                <dt>
                                                    User Name
                                                </dt>

                                                <dt>
                                                    Date of Birth
                                                </dt>
                                                <dt>
                                                    Nurse Certification Status
                                                </dt>

                                                <dt>
                                                    Address
                                                </dt>

                                                <dt>
                                                    Email
                                                </dt>

                                                <dt>
                                                    Phone <br /><br />
                                                </dt>

                                                <dt>
                                                    Action
                                                </dt>

                                            </dl>
                                        </td>
                                        <td>
                                            <dl class="dl-horizontal">
                                                <dd>
                                                    @Model.User.LastName, @Model.User.FirstName
                                                </dd>
                                                <dd>
                                                    @Model.User.UserName
                                                </dd>
                                                <dd>
                                                    @Model.User.DOB
                                                </dd>
                                                @if (dateCertificationExpiry < Model.User.NurseCertification)
                                                {
                                                    if (Model.User.NurseCertification - dateCertificationExpiry > dateCertificationExpiry.AddMonths(1) - dateCertificationExpiry)
                                                    {
                                                        <dd style="color:green">
                                                            Good Until: (@string.Format("{0:MMMM d , yyyy}", Model.User.NurseCertification.Date))
                                                        </dd>
                                                    }
                                                    else
                                                    {
                                                        <dd style="color:orange">
                                                            Expiring: (@string.Format("{0:MMMM d , yyyy}", Model.User.NurseCertification.Date))
                                                        </dd>
                                                    }
                                                }
                                                else
                                                {
                                                    <dd style="color:red">
                                                        Expired: (@string.Format("{0:MMMM d , yyyy}", Model.User.NurseCertification.Date))
                                                    </dd>
                                                }
                                                <dd>
                                                    @(Model.User.Address != null ? Model.User.Address : "N/A"), @(Model.User.City != null ? Model.User.City : "N/A"), @(Model.User.Province != null ? Model.User.Province : "N/A"), @(Model.User.ZipCode != null ? Model.User.ZipCode : "N/A")
                                                </dd>
                                                <dd>
                                                    @Model.User.Email
                                                </dd>
                                                <dd>
                                                    Cell: @if (Model.User.CellPhone != null)
                                                    {@Model.User.CellPhone}
                                                else
                                                { @Html.Raw("N/A")} <br />
                                                    Home: @if (Model.User.HomePhone != null)
                                                    {@Model.User.HomePhone}
                                                else
                                                { @Html.Raw("N/A")}
                                                </dd>
                                                <dd>
                                                    <a href="~/Admin/AddStaff/@Model.User.UserId" class="fcbtn btn btn-info btn-outline btn-1f">
                                                        Update
                                                    </a>
                                                </dd>
                                            </dl>
                                        </td>
                                    }
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="panel panel-info">
                        <div class="panel-heading "> My Calendar</div>
                        <div class="white-box">
                            @{
                                var now = ViewBag.chosenMonth != null ? ViewBag.chosenMonth : DateTime.Now;
                                var daysInMonth = DateTime.DaysInMonth(now.Year, now.Month);
                                var firstDayOfMonth = new DateTime(now.Year, now.Month, 1);
                                var lastDayOfMonth = new DateTime(now.Year, now.Month, daysInMonth);
                                var previousMonth = firstDayOfMonth.AddMonths(-1);
                                var nextMonth = firstDayOfMonth.AddMonths(1);
                                var daysOfWeek = new[] { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };
                            }

                            <div class="month-control">
                                <h2 class="month-h2">@now.ToString("MMMM yyyy")</h2>
                                <a href="@Url.Action("StaffDetails", new { year = previousMonth.Year, month = previousMonth.Month })">&lt; Previous Month</a>   --|--
                                <a href="@Url.Action("StaffDetails", new { year = nextMonth.Year, month = nextMonth.Month })">Next Month &gt;</a>
                            </div>

                            <table class="table-schedule">
                                <thead>
                                    <tr>
                                        @foreach (var dayOfWeek in daysOfWeek)
                                        {
                                            <th>@dayOfWeek</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int day = 1; day <= daysInMonth; day++)
                                    {

                                        var date = new DateTime(now.Year, now.Month, day);
                                        if (date.DayOfWeek == DayOfWeek.Sunday)
                                        {
                                            @:<tr>
                                            }
                                            if (day == 1)
                                            {

                                                for (int gap = 0; gap < (int)date.DayOfWeek; gap++)
                                                {
                                                    @:<td class="borderless"></td>
                                                }
                                            }
                                            <td>


                                                @if (date >= firstDayOfMonth && date <= lastDayOfMonth)
                                                {
                                                    var hasShift = Model.WholeCalendarShifts.Find(x => x.StartDate.Value.Date == date || x.EndDate.Value.Date == date);
                                                    if (hasShift != null)
                                                    {<span><a href="@Url.Action("StaffDetails", new { year = now.Year, month = now.Month, day = day })">@day</a></span>}
                                                    else
                                                    {
                                                        <span class="other-month">@day</span>
                                                    }
                                                }

                                            </td>
                                            if (date.DayOfWeek == DayOfWeek.Saturday)
                                            {
                                            @:</tr>
                                        }

                                        if (lastDayOfMonth.DayOfWeek == DayOfWeek.Saturday)
                                        {
                                            @:</tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>



            <div class="panel panel-info">
                <div class="panel-heading">Schedule</div>
                <div class="white-box overflow-x-scroll">
                    @{
                        var schedule = ViewBag.chosenDate != null ? ViewBag.chosenDate : now;
                    }
                    <div class="month-control">
                        <h2 class="month-h2">@schedule.ToString("yyyy, MMMM d")</h2>
                    </div>
                    <table class="day-schedule">
                        <tbody>
                            <tr>
                                <th>Time</th>
                                @for (int hour = 0; hour <= 23; hour++)
                                {
                                    for (int minute = 0; minute <= 45; minute += 30)
                                    {
                                        var time = new DateTime(schedule.Year, schedule.Month, schedule.Day, hour, minute, 0);
                                        <td>@time.ToString("h:mm tt")</td>
                                    }
                                }
                            </tr>
                            <tr style="height: 4rem">
                                <th></th>
                                @for (int hour = 0; hour <= 23; hour++)
                                {
                                    for (int minute = 0; minute <= 45; minute += 30)
                                    {
                                        var time = new DateTime(schedule.Year, schedule.Month, schedule.Day, hour, minute, 0);

                                        var isBooked = Model.ShiftScheduleList.FirstOrDefault(x => x.StartDate <= time && time <= x.EndDate);

                                        if (isBooked != null)
                                        {
                                            @:<td class="work-time"></td>
                                        }
                                        else
                                        {
                                            @:<td class="unavailable-time"></td>
                                        }

                                    }
                                }
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="panel panel-info">
                <div class="panel-heading "> All Shifts List </div>
                <div class="white-box">
                    <div class="table-responsive" style="max-height: 60vh; overflow-y:scroll">
                        @*<br /><br /><br />*@
                        <table id="example" class="table  table-hover contact-list footable-loaded footable m-t-0" data-page-size="4" >
                            <thead>
                                <tr class="text-dark">
                                    <th scope="col">S.No</th>
                                    <th scope="col">Start Date</th>
                                    <th scope="col">End Date</th>
                                    <th scope="col">Start Time</th>
                                    <th scope="col">End Time</th>
                                    <th scope="col">Total Hours</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var shift in Model.WholeCalendarShifts)
                                {
                                    
                                    sno = sno + 1;
                                    <tr>

                                        <td>@sno</td>
                                        <td>@(shift.StartDate.Value.Date != null ? string.Format("{0:MMMM d , yyyy}", shift.StartDate.Value.Date) : "")</td>
                                        <td>@(shift.EndDate.Value.Date != null ? string.Format("{0:MMMM d , yyyy}", shift.EndDate.Value.Date) : "")</td>
                                        <td>@shift.StartTime</td>
                                        <td>@shift.EndTime</td>
                                        @{
                                            TimeSpan Hours = shift.EndDate.Value - shift.StartDate.Value;
                                            int totalHours = Convert.ToInt32(Hours.TotalHours);
                                        }
                                        <td>@totalHours</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<style>
    table {
        border-collapse: collapse;
    }

    th, td {
        border: 1px solid #ccc;
        padding: 5px;
        text-align: center;
    }

        td dd {
            text-align: left;
        }

    dt {
        padding-right: 10px;
        text-align: right;
        margin-bottom: 8.5px;
    }

    .other-month {
        color: #ccc;
    }

    .overflow-x-scroll {
        overflow-x: scroll;
    }

    .table-schedule {
        width: 80%;
        margin: 3.5rem auto;
    }

        .table-schedule td, .table-schedule th {
            border: none;
        }

    .day-schedule {
        width: 50%;
        margin: 3.5rem auto;
    }

        .day-schedule td, .day-schedule th {
            border: none;
        }

            .day-schedule td.available-time {
                background: #eee;
            }

            .day-schedule td.work-time {
                background: #4cff00;
            }

            .day-schedule td.unavailable-time {
                background: #808080;
            }

        .day-schedule

        .borderless {
            border: none;
        }

    .month-control {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        margin: 0 1rem;
    }

    .month-h2 {
        width: 100%;
        text-align: center;
    }
</style>